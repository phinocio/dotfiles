# vim:ft=conf

# Based off:
# - https://github.com/ericmurphyxyz/dotfiles/blob/master/.config/lf/lfrc
# - https://github.com/adolfgatonegro/dotfiles/blob/master/.config/lf/lfrc
# - https://github.com/gokcehan/lf

# Interpreter for shell commands
set shell zsh
set shellopts '-euy'
set ifs "\n"

# Basic Settings
set calcdirsize
set dircounts
set hidden true
set icons true
set ignorecase true
set info size
set ratios 1:3
set scrolloff 10
set cursorpreviewfmt ""
# Previews, using kitty with pistol as a fallback

# set previewer ~/.config/lf/lf_kitty_preview
# set cleaner ~/.config/lf/lf_kitty_clean
set previewer ~/.config/lf/previewer.sh
set cleaner ~/.config/lf/clear_img.sh

# Use eza for showing info at bottom left
cmd on-select &{{
    lf -remote "send $id set statfmt \"$(exa -ld --color=always "$f")\""
}}

# Trash bindings (dep on trash-cli)
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trash-put "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd restore_trash ${{
  trash-restore
}}

# extract contents of archive
cmd extract ${{
  case "$f" in
	*.tar.bz2)   tar xjf "$f"   ;;
	*.tar.gz)    tar xzf "$f"   ;;
	*.bz2)       bunzip2 "$f"   ;;
	*.rar)       unrar x "$f"   ;;
	*.gz)        gunzip "$f"    ;;
	*.tar)       tar xf  "$f"    ;;
	*.tbz2)      tar xjf "$f"   ;;
	*.tgz)       tar xzf "$f"   ;;
	*.zip)       unzip "$f"     ;;
	*.Z)         uncompress "$f";;
	*.7z)        7z x "$f"      ;;
	*.deb)       ar x "$f"      ;;
	*.tar.xz)    tar xf "$f"    ;;
	*.tar.zst)   tar xf "$f"    ;;
	*)           echo "'$f' cannot be extracted via ex()" ;;
  esac
}}

cmd mkdirfile ${{
	if [[ $1 =~ ^.*/$ ]]; then
		mkdir -p $1
	else
		touch $1
	fi
}}

# cmd open $set -f; rifle -p 0 "$fx"
# open text files in $EDITOR and xdg-open for everything else
cmd open &{{
	case $(file --mime-type -Lb $f) in
		text/*) lf -remote "send $id \$$EDITOR \$fx";;
		# image/*) imgview $fx;;
		# video/*) umpv $fx;;
		*) xdg-open $fx;;
	esac
}}

# Change dir inside of lf by using fzf
cmd fzf_jump ${{
    res="$(fd . $HOME $PROJECTS_DIR --max-depth 2 | uniq | fzf --header='Jump to location')"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}

# Unbind things
map d

# Basic Functions
map . set hidden!
map x cut
map dd trash
map dr restore_trash
map ua extract
map <c-f> :fzf_jump
map a push :mkdirfile<space>
map ga calcdirsize
map <space> :toggle
