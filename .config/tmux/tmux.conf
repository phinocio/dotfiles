# Improve colors
set -g default-terminal "tmux-256color"
# set-option -sa terminal-overrides ",xterm*:Tc"
set-option -sa terminal-features ',xterm-kitty:RGB'

setw -g mouse on
setw -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xsel -b'

set -g status-position top

# Yazi says to set these for image preview to work properly
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# Set indexes to 1 because human
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable undercurl colors
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Allow tmux to set the terminal title
set -g set-titles on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# A bell in another window should cause a bell in the current window
set -g bell-action any

# don't detach tmux when killing a session
set -g detach-on-destroy off

# Status line customisation
# set-option -g status-left-length 100
# set-option -g status-right-length 100
# set-option -g status-left " #{session_name}  "
# set-option -g status-right "#{pane_title} "
# set-option -g status-style "fg=#7C7D83 bg=#242631"
# set-option -g window-status-format "#{window_index}:#{pane_current_command}#{window_flags} "
# set-option -g window-status-current-format "#{window_index}:#{pane_current_command}#{window_flags} "
# set-option -g window-status-current-style "fg=#E9E9EA"
# set-option -g window-status-activity-style none

#--------------------------------------------------------------------------
# Key Bindings
#--------------------------------------------------------------------------

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Set the prefix to Ctrl+Space
set -g prefix C-Space

# Send prefix to a nested tmux session by doubling the prefix
bind C-Space send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.config/tmux/tmux.conf\; display-message '~/.config/tmux/tmux.conf reloaded'

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Move the current window to the next window or previous window position
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

# Switch between two most recently used windows
bind Space last-window

# Switch between two most recently used sessions
bind ^ switch-client -l

# use PREFIX+| (or PREFIX+\) to split window horizontally and PREFIX+- or
# (PREFIX+_) to split vertically also use the current pane path to define the
# new pane path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

# bind-key -r F new-window tmux-sessionizer
# bind-key -r D run-shell "tmux-sessionizer ~/.dotfiles"
# bind-key -r L run-shell "tmux-sessionizer ~/Projects/APIs/loadorderlibrary-api"
# bind-key -r A run-shell "tmux-sessionizer ~/Projects/Automation"
# bind-key -r G run-shell "tmux-sessionizer ~/Projects/go_chat/"
# bind-key -r O run-shell "tmux-sessionizer ~/Documents/Obsidian/"

# unbind t
# bind-key -r t run-shell 'tmux popup -w 80% -h 70% -T scratch -b rounded "tmux new -A -s scratch -c $HOME"'
# Toggle popup window with Alt-1
bind-key -n -N 'Toggle scratch window' M-1 if-shell -F '#{==:#{session_name},scratch}' {
    detach-client
} {
    popup -d "$HOME" -w 80% -h 75% -E 'tmux new -A -s scratch'
}

bind-key -r i run-shell "tmux neww tmux-cht.sh"
#--------------------------------------------------------------------------
# Plugins
#--------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-resurrect'

set -g @plugin 'dracula/tmux'
set -g @dracula-plugins "cwd time"
set -g @dracula-show-left-icon session
set -g @dracula-show-powerline true
set -g @dracula-show-fahrenheit false
set -g @dracula-military-time true

#set -g @plugin 'catppuccin/tmux'
#set -g @catppuccin_flavour 'macchiato' # or frappe, macchiato, mocha


run '~/.config/tmux/plugins/tpm/tpm'
